{"version":3,"sources":["../index.ts","../src/options.ts","../src/utils.ts","../data/basic.ts","../data/node.ts","../data/index.ts","../src/content.ts"],"sourcesContent":["#!/usr/bin/env node\r\n\r\nimport { writeFileSync } from 'fs'\r\nimport path from 'path'\r\nimport { options } from './src/options.js'\r\nimport { getContent } from './src/content.js'\r\nconst __dirname = path.resolve()\r\n\r\nconst fileName = '.gitignore'\r\nconst fullPath = path.resolve(__dirname, fileName)\r\n\r\nconst { type } = await options()\r\n\r\nawait create(fullPath)\r\n\r\nasync function create(path: string) {\r\n  try {\r\n    writeFileSync(path, await getContent(type))\r\n    // eslint-disable-next-line no-console\r\n    console.log('\\n .gitignore is generated successfully! 🎉')\r\n  }\r\n  catch (error) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`looks like something wrong: ${error}`)\r\n  }\r\n}\r\n","import prompts from 'prompts'\r\nimport {\r\n  blue,\r\n  cyan,\r\n  lightRed,\r\n  magenta,\r\n  red,\r\n  reset,\r\n  yellow,\r\n} from 'kolorist'\r\nimport { getAllData } from '../data'\r\n\r\ninterface ChoiceType {\r\n  title: string\r\n  value: string\r\n}\r\n\r\nconst AllData = getAllData()\r\n\r\nexport async function options() {\r\n  const response = await prompts({\r\n    type: 'select',\r\n    name: 'type',\r\n    message: '选择一种 gitignore 模板',\r\n    choices: (() => {\r\n      const choices: ChoiceType[] = []\r\n      const files = Object.keys(AllData)\r\n      const colors = [yellow, cyan, blue, magenta,\r\n        lightRed,\r\n        red,\r\n        reset]\r\n      files.forEach((f, i) => {\r\n        const name = f.split('.')[0]\r\n        let color\r\n        if (i >= colors.length)\r\n          color = colors[i % colors.length]\r\n        else\r\n          color = colors[i]\r\n\r\n        choices.push({\r\n          title: color(name),\r\n          value: name,\r\n        })\r\n      })\r\n      return choices\r\n    })(),\r\n  })\r\n  return response\r\n}\r\n","export function withComment(content: string) {\r\n  return `# ${content}`\r\n}\r\n\r\nexport function withNewLine(content: string) {\r\n  return `\\r${content}`\r\n}\r\n\r\nexport function Sign() {\r\n  return withComment('generated by @alexzhang1030/gi')\r\n}\r\n\r\nexport function isBasic(type: string) {\r\n  return type === 'basic'\r\n}\r\n","import { withComment, withNewLine } from '../src/utils.js'\r\n\r\nconst forNpmPack = [\r\n  withNewLine(withComment('Output of \\'npm pack\\'')),\r\n  '*.tgz',\r\n]\r\n\r\nexport const basic = [\r\n  'node_modules',\r\n  'dist',\r\n  '.DS_Store',\r\n  'npm-debug.log*',\r\n  '.pnpm-debug.log*',\r\n  'yarn-debug.log*',\r\n  'yarn-error.log*',\r\n  ...forNpmPack,\r\n]\r\n","export const node = [\r\n  'logs',\r\n  '*.log',\r\n]\r\n","import { basic } from './basic'\r\nimport { node } from './node'\r\n\r\nexport function getAllData(): Record<string, string[]> {\r\n  return {\r\n    basic,\r\n    node,\r\n  }\r\n}\n","import { getAllData } from '../data'\r\nimport { Sign, isBasic } from './utils.js'\r\n\r\nconst data = getAllData()\r\nexport function getContent(type: string) {\r\n  let content = data[type]\r\n  if (!isBasic(type)) {\r\n    const basic = getBasic()\r\n    content = basic.concat(content)\r\n  }\r\n  content.unshift(Sign())\r\n  return content.join('\\n')\r\n}\r\n\r\nexport function getBasic() {\r\n  return data.basic\r\n}\r\n"],"mappings":";;;AAEA;AACA;;;ACHA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACDO,qBAAqB,SAAiB;AAC3C,SAAO,KAAK;AACd;AAEO,qBAAqB,SAAiB;AAC3C,SAAO,KAAK;AACd;AAEO,gBAAgB;AACrB,SAAO,YAAY,gCAAgC;AACrD;AAEO,iBAAiB,OAAc;AACpC,SAAO,UAAS;AAClB;;;ACZA,IAAM,aAAa;AAAA,EACjB,YAAY,YAAY,sBAAwB,CAAC;AAAA,EACjD;AACF;AAEO,IAAM,QAAQ;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL;;;AChBO,IAAM,OAAO;AAAA,EAClB;AAAA,EACA;AACF;;;ACAO,sBAAgD;AACrD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;AJSA,IAAM,UAAU,WAAW;AAE3B,yBAAgC;AAC9B,QAAM,WAAW,MAAM,QAAQ;AAAA,IAC7B,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAU,OAAM;AACd,YAAM,UAAwB,CAAC;AAC/B,YAAM,QAAQ,OAAO,KAAK,OAAO;AACjC,YAAM,SAAS;AAAA,QAAC;AAAA,QAAQ;AAAA,QAAM;AAAA,QAAM;AAAA,QAClC;AAAA,QACA;AAAA,QACA;AAAA,MAAK;AACP,YAAM,QAAQ,CAAC,GAAG,MAAM;AACtB,cAAM,OAAO,EAAE,MAAM,GAAG,EAAE;AAC1B,YAAI;AACJ,YAAI,KAAK,OAAO;AACd,kBAAQ,OAAO,IAAI,OAAO;AAAA;AAE1B,kBAAQ,OAAO;AAEjB,gBAAQ,KAAK;AAAA,UACX,OAAO,MAAM,IAAI;AAAA,UACjB,OAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AACD,aAAO;AAAA,IACT,GAAG;AAAA,EACL,CAAC;AACD,SAAO;AACT;;;AK7CA,IAAM,OAAO,WAAW;AACjB,oBAAoB,OAAc;AACvC,MAAI,UAAU,KAAK;AACnB,MAAI,CAAC,QAAQ,KAAI,GAAG;AAClB,UAAM,SAAQ,SAAS;AACvB,cAAU,OAAM,OAAO,OAAO;AAAA,EAChC;AACA,UAAQ,QAAQ,KAAK,CAAC;AACtB,SAAO,QAAQ,KAAK,IAAI;AAC1B;AAEO,oBAAoB;AACzB,SAAO,KAAK;AACd;;;ANVA,IAAM,aAAY,KAAK,QAAQ;AAE/B,IAAM,WAAW;AACjB,IAAM,WAAW,KAAK,QAAQ,YAAW,QAAQ;AAEjD,IAAM,EAAE,SAAS,MAAM,QAAQ;AAE/B,MAAM,OAAO,QAAQ;AAErB,sBAAsB,OAAc;AAClC,MAAI;AACF,kBAAc,OAAM,MAAM,WAAW,IAAI,CAAC;AAE1C,YAAQ,IAAI,oDAA6C;AAAA,EAC3D,SACO,OAAP;AAEE,YAAQ,IAAI,+BAA+B,OAAO;AAAA,EACpD;AACF;","names":[]}